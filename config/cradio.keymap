// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
           &kp J  &kp L  &kp U    &kp A      &kp Q          &kp W      &kp B      &kp D    &kp G              &kp Y
         &lt 3 C  &kp R  &kp I    &kp E      &kp O          &kp M      &kp N      &kp T    &kp S            &lt 3 H
&ht LEFT_SHIFT V  &kp X  &none    &none      &none          &kp P      &kp F  &kp COMMA  &kp DOT  &ht RIGHT_SHIFT K
                                &kp TAB  &kp SPACE  &kp BACKSPACE  &kp ENTER
            >;
        };

        right_layer {
            bindings = <
   &kp INS  &kp N1  &kp N2  &kp N3   &trans  &kp HOME  &kp PG_DN  &kp PG_UP   &kp END  &kp COLON
   &kp DEL  &kp N4  &kp N5  &kp N6   &trans  &kp LARW   &kp DARW   &kp UARW  &kp RARW   &kp SEMI
&caps_word  &kp N7  &kp N8  &kp N9   &kp N0    &trans     &trans     &trans    &trans     &trans
                            &trans  &kp ESC    &trans     &trans
            >;
        };

        left_layer {
            bindings = <
  &trans  &kp LBKT  &kp LBRC  &kp RBRC     &trans  &kp CARET   &kp LPAR   &kp RPAR  &kp RBKT  &kp TILDE
&kp EXCL    &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
  &trans    &trans    &trans    &trans     &trans   &kp AMPS  &kp UNDER   &kp PLUS  &kp PIPE     &trans
                                &trans     &trans     &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
     &trans  &trans  &trans      &trans  &bt BT_SEL 0  &trans  &trans  &trans  &trans       &trans
&bootloader  &trans  &trans      &trans  &bt BT_SEL 1  &trans  &trans  &trans  &trans  &bootloader
     &trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 2  &trans  &trans  &trans  &trans       &trans
                                 &trans        &trans  &trans  &trans
            >;
        };
    };
};
